# Generated by Django 4.1.7 on 2023-03-16 15:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_name', models.CharField(db_column='education_name', max_length=128, validators=[django.core.validators.MinLengthValidator(5)])),
                ('school_name', models.CharField(db_column='school_name', max_length=128, validators=[django.core.validators.MinLengthValidator(5)])),
                ('start_date', models.DateField(db_column='start_date')),
                ('end_date', models.DateField(blank=True, db_column='end_date', null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
            ],
            options={
                'db_table': 'education',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_name', models.CharField(db_column='experience_name', max_length=128)),
                ('experience_description', models.TextField(db_column='description', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('start_date', models.DateField(db_column='start_date')),
                ('end_date', models.DateField(blank=True, db_column='end_date', null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
            ],
            options={
                'db_table': 'experience',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_column='title', max_length=128, validators=[django.core.validators.MinLengthValidator(5)])),
                ('description', models.TextField(db_column='description', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('location', models.CharField(db_column='location', max_length=128, validators=[django.core.validators.MinLengthValidator(5)])),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(db_column='skill_name', max_length=128, validators=[django.core.validators.MinLengthValidator(3)])),
                ('skill_level', models.PositiveSmallIntegerField(blank=True, db_column='rating', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
            ],
            options={
                'db_table': 'skill',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(verbose_name='video_url')),
                ('topic', models.CharField(db_column='topic', max_length=128, validators=[django.core.validators.MinLengthValidator(1)])),
                ('description', models.TextField(db_column='description', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video',
            },
        ),
        migrations.CreateModel(
            name='VideoLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='linkloop_app.video')),
            ],
            options={
                'db_table': 'video_like',
            },
        ),
        migrations.CreateModel(
            name='VideoImpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_views', models.PositiveIntegerField(db_column='anonymous_views', default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('impression_time', models.DateTimeField(auto_now_add=True, db_column='impression_time')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='linkloop_app.video')),
                ('viewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'video_impression',
            },
        ),
        migrations.CreateModel(
            name='VideoComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(db_column='comment_text', max_length=1000, validators=[django.core.validators.MinLengthValidator(1)])),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='linkloop_app.video')),
            ],
            options={
                'db_table': 'video_comment',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='linkloop_app.skill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_skill',
            },
        ),
        migrations.CreateModel(
            name='UserSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_query', models.CharField(db_column='search_query', max_length=300, validators=[django.core.validators.MinLengthValidator(1)])),
                ('search_time', models.DateTimeField(auto_now_add=True, db_column='search_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_search',
            },
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField(db_column='message_text', max_length=1000, validators=[django.core.validators.MinLengthValidator(10)])),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='linkloop_app.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_message',
            },
        ),
        migrations.CreateModel(
            name='UserExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='linkloop_app.experience')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_experience',
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='linkloop_app.education')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_education',
            },
        ),
        migrations.CreateModel(
            name='ProfileImpression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_views', models.PositiveIntegerField(db_column='anonymous_views', default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('viewed_time', models.DateTimeField(auto_now_add=True, db_column='viewed_time')),
                ('viewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_profiles', to=settings.AUTH_USER_MODEL)),
                ('viewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='viewers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile_impression',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.URLField(blank=True, null=True, verbose_name='profile_pic_url')),
                ('location', models.CharField(db_column='location', max_length=128, validators=[django.core.validators.MinLengthValidator(10)])),
                ('rating', models.PositiveSmallIntegerField(blank=True, db_column='rating', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('website', models.URLField(blank=True, db_column='website_url', null=True)),
                ('date_of_birth', models.DateField(db_column='date_of_birth')),
                ('created_time', models.DateTimeField(auto_now_add=True, db_column='created_time')),
                ('updated_time', models.DateTimeField(auto_now=True, db_column='updated_time')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='messages',
            field=models.ManyToManyField(related_name='received_messages', through='linkloop_app.UserMessage', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL),
        ),
    ]
